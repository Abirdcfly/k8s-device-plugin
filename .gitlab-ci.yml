# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

default:
  image: docker:stable
  services:
    - name: docker:stable-dind
      command: ["--experimental"]

stages:
  - image
  - lint
  - go-checks
  - go-build
  - unit-tests
  - build
  - release

.tests-setup: &tests-setup
  image: golang:1.14.4

  rules:
    - when: always

  variables:
    GITHUB_ROOT: "github.com/NVIDIA"
    PROJECT_GOPATH: "${GITHUB_ROOT}/k8s-device-plugin"

  before_script:
    - mkdir -p ${GOPATH}/src/${GITHUB_ROOT}
    - ln -s ${CI_PROJECT_DIR} ${GOPATH}/src/${PROJECT_GOPATH}

.build-and-release-setup: &build-and-release-setup
    before_script:
        - apk add make

.dev-image:
  variables:
    BUILDIMAGE: "${CI_REGISTRY_IMAGE}/device-plugin-build:${CI_COMMIT_SHORT_SHA}"

build-dev-image:
  extends:
    - .dev-image
  stage: image
  script:
    - apk --no-cache add make bash
    - make .build-image
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - make .push-build-image

.requires-build-image:
  image: "${CI_REGISTRY_IMAGE}/device-plugin-build:${CI_COMMIT_SHORT_SHA}"

.go-check:
  extends:
    - .requires-build-image
  stage: go-checks

fmt:
  extends:
    - .go-check
  script:
    - make assert-fmt

vet:
  extends:
    - .go-check
  script:
    - make vet

go-lint:
  extends:
    - .go-check
  script:
    - make lint

ineffassign:
  extends:
    - .go-check
  script:
    - make ineffassign

misspell:
  extends:
    - .go-check
  script:
    - make misspell

go-build:
  extends:
    - .requires-build-image
  stage: go-build
  script:
    - make build

unit-tests:
  extends:
    - .requires-build-image
  stage: unit-tests
  script:
    - make coverage

# Build pushes to the local gitlab registry
build:device-plugin:
    <<: *build-and-release-setup
    stage: build
    rules:
    - when: always

    script:
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"

    - make REGISTRY="${CI_REGISTRY_IMAGE}" VERSION="${CI_COMMIT_SHA}" all
    - make REGISTRY="${CI_REGISTRY_IMAGE}" VERSION="${CI_COMMIT_SHA}" push
    - make REGISTRY="${CI_REGISTRY_IMAGE}" VERSION="${CI_COMMIT_SHA}" push-short
    - make REGISTRY="${CI_REGISTRY_IMAGE}" VERSION="${CI_COMMIT_SHA}" push-latest

# Release pushes to dockerhub
release:device-plugin:
    <<: *build-and-release-setup
    stage: release
    only:
    - tags

    script:
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}"

    - make VERSION="${CI_COMMIT_TAG}" all
    - make VERSION="${CI_COMMIT_TAG}" push
    - make VERSION="${CI_COMMIT_TAG}" push-short
    - make VERSION="${CI_COMMIT_TAG}" push-latest
